{"version":3,"sources":["script.js"],"names":["darkButton","document","getElementById","lightButton","setColorMode","localStorage","getItem","setDarkMode","click","setLightMode","checkIsLight","window","matchMedia","matches","querySelector","classList","setItem","radioButtons","querySelectorAll","i","length","addEventListener","event","checked"],"mappings":"AAAA,aAAA,IAAMA,WAAaC,SAASC,eAAe,QACrCC,YAAcF,SAASC,eAAe,SAEtCE,aAAe,WACsB,QAArCC,aAAaC,QAAQ,cACvBC,cACAP,WAAWQ,SACmC,SAArCH,aAAaC,QAAQ,eAC9BG,eACAN,YAAYK,QAEhB,EAEME,aAAe,WACfC,OAAOC,WAAW,gCAAgCC,SACpDV,YAAYK,OAEhB,EAEMD,YAAc,WAClBN,SAASa,cAAc,QAAQC,UAAY,OAC3CV,aAAaW,QAAQ,YAAa,OACpC,EAEMP,aAAe,WACnBR,SAASa,cAAc,QAAQC,UAAY,QAC3CV,aAAaW,QAAQ,YAAa,QACpC,EAEAZ,eAGA,IADA,IAAMa,aAAehB,SAASiB,iBAAiB,0BACtCC,EAAI,EAAGA,EAAIF,aAAaG,OAAQD,IACvCF,aAAaE,GAAGE,iBAAiB,SAAS,SAACC,GACrCtB,WAAWuB,QACbhB,cAEAE,cAEJ","file":"script.js","sourcesContent":["const darkButton = document.getElementById(\"dark\");\r\nconst lightButton = document.getElementById(\"light\");\r\n\r\nconst setColorMode = () => {\r\n  if (localStorage.getItem(\"colorMode\") == \"dark\") {\r\n    setDarkMode();\r\n    darkButton.click();\r\n  } else if (localStorage.getItem(\"colorMode\") == \"light\") {\r\n    setLightMode();\r\n    lightButton.click();\r\n  }\r\n};\r\n\r\nconst checkIsLight = () => {\r\n  if (window.matchMedia(\"(prefers-color-scheme: dark)\").matches) {\r\n    lightButton.click();\r\n  }\r\n};\r\n\r\nconst setDarkMode = () => {\r\n  document.querySelector(\"body\").classList = \"dark\";\r\n  localStorage.setItem(\"colorMode\", \"dark\");\r\n};\r\n\r\nconst setLightMode = () => {\r\n  document.querySelector(\"body\").classList = \"light\";\r\n  localStorage.setItem(\"colorMode\", \"light\");\r\n};\r\n\r\nsetColorMode();\r\n\r\nconst radioButtons = document.querySelectorAll(\".toggle__wrapper input\");\r\nfor (let i = 0; i < radioButtons.length; i++) {\r\n  radioButtons[i].addEventListener(\"click\", (event) => {\r\n    if (darkButton.checked) {\r\n      setDarkMode();\r\n    } else {\r\n      setLightMode();\r\n    }\r\n  });\r\n}\r\n\r\n// const darkButton = document.getElementById(\"dark\");\r\n// const lightButton = document.getElementById(\"light\");\r\n\r\n// const setDarkMode = () => {\r\n//   document.querySelector(\"body\").classList = \"dark\";\r\n//   localStorage.setItem(\"colorMode\", \"dark\");\r\n// };\r\n\r\n// const setLightMode = () => {\r\n//   document.querySelector(\"body\").classList = \"light\";\r\n//   localStorage.setItem(\"colorMode\", \"light\");\r\n// };\r\n\r\n// const colorModeFromLocalStorage = () => {\r\n//   return localStorage.getItem(\"colorMode\");\r\n// };\r\n\r\n// const colorModeFromPreferences = () => {\r\n//   return window.matchMedia(\"(prefers-color-scheme: dark)\").matches\r\n//     ? \"dark\"\r\n//     : \"light\"; // If preference is set or does not match anything (light is default)\r\n// };\r\n\r\n// const loadAndUpdateColor = () => {\r\n//   // local storage has precendence over the prefers-color-scheme\r\n//   const color = colorModeFromLocalStorage() || colorModeFromPreferences();\r\n//   color == \"dark\" ? darkButton.click() : lightButton.click();\r\n// };\r\n\r\n// // when the inputs are clicked, check which radio button is checked and change the color\r\n// const radioButtons = document.querySelectorAll(\".toggle__wrapper input\");\r\n// radioButtons.forEach((button) => {\r\n//   button.addEventListener(\"click\", (event) => {\r\n//     darkButton.checked ? setDarkMode() : setLightMode();\r\n//   });\r\n// });\r\n\r\n// // when the prefers-color-scheme changes, this event will be emitted\r\n// // event reflects the media query, if it matches, the new color is dark, else it is light\r\n// window\r\n//   .matchMedia(\"(prefers-color-scheme: dark)\")\r\n//   .addEventListener(\"change\", (event) => {\r\n//     event.matches ? darkButton.click() : lightButton.click();\r\n//   });\r\n\r\n// // Load the right color on startup - localStorage has precedence\r\n// loadAndUpdateColor();\r\n"]}